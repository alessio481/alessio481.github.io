[gd_scene load_steps=12 format=2]

[ext_resource path="res://scene/player.gd" type="Script" id=1]

[sub_resource type="SphereShape" id=1]

[sub_resource type="SphereMesh" id=2]

[sub_resource type="Shader" id=3]
code = " 
shader_type spatial;
 
render_mode unshaded, cull_front;
 
 
uniform float border_width : hint_range(0,1,0.001);
uniform vec4 color : hint_color = vec4(1.0);
 
uniform bool pattern;
uniform float line_number : hint_range(0,100,1);
uniform float line_sharpness : hint_range(0,10,0.001);
 
uniform bool pulse;
uniform float pulse_speed : hint_range(0,100,1);
 
uniform bool line_movement;
uniform float line_movement_speed : hint_range(-100,100,1);
 
uniform bool wave;
 
void vertex() {
	VERTEX += VERTEX * border_width;
}
 
void fragment() {
	ALBEDO = color.xyz;
	if (pattern) 
	{
		vec2 uv = VERTEX.xy * line_number;
		ALBEDO = sin(uv.xxx + uv.yyy) * line_sharpness * color.xyz;
 
		if (pulse)
		{
			ALBEDO = sin(uv.xxx + uv.yyy) * line_sharpness * color.xyz * sin(TIME * pulse_speed);
		}
 
		if (line_movement)
		{
			ALBEDO = sin(uv.xxx + uv.yyy + TIME * line_movement_speed) * line_sharpness * color.xyz;
		}
 
		if (pulse && line_movement)
		{
			ALBEDO = sin(uv.xxx + uv.yyy + TIME * line_movement_speed) * line_sharpness * color.xyz * sin(TIME * pulse_speed);
		}
	}
 
	if (wave)
	{
		vec2 uv = VERTEX.xy * line_number;
		ALBEDO = sin(uv.xxx + TIME * line_movement_speed) * line_sharpness * color.xyz;
	}
 
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/border_width = 0.1
shader_param/color = Color( 0.741176, 1, 1, 1 )
shader_param/pattern = false
shader_param/line_number = 45.0
shader_param/line_sharpness = 0.0
shader_param/pulse = false
shader_param/pulse_speed = 0.0
shader_param/line_movement = false
shader_param/line_movement_speed = 0.0
shader_param/wave = false

[sub_resource type="SpatialMaterial" id=5]
next_pass = SubResource( 4 )
flags_unshaded = true
params_diffuse_mode = 4
params_specular_mode = 3
albedo_color = Color( 0.556863, 0.807843, 0.854902, 1 )

[sub_resource type="Shader" id=7]
code = " 
shader_type spatial;
 
render_mode unshaded, cull_front;
 
 
uniform float border_width : hint_range(0,1,0.001);
uniform vec4 color : hint_color = vec4(1.0);
 
uniform bool pattern;
uniform float line_number : hint_range(0,100,1);
uniform float line_sharpness : hint_range(0,10,0.001);
 
uniform bool pulse;
uniform float pulse_speed : hint_range(0,100,1);
 
uniform bool line_movement;
uniform float line_movement_speed : hint_range(-100,100,1);
 
uniform bool wave;
 
void vertex() {
	VERTEX += VERTEX * border_width;
}
 
void fragment() {
	ALBEDO = color.xyz;
	if (pattern) 
	{
		vec2 uv = VERTEX.xy * line_number;
		ALBEDO = sin(uv.xxx + uv.yyy) * line_sharpness * color.xyz;
 
		if (pulse)
		{
			ALBEDO = sin(uv.xxx + uv.yyy) * line_sharpness * color.xyz * sin(TIME * pulse_speed);
		}
 
		if (line_movement)
		{
			ALBEDO = sin(uv.xxx + uv.yyy + TIME * line_movement_speed) * line_sharpness * color.xyz;
		}
 
		if (pulse && line_movement)
		{
			ALBEDO = sin(uv.xxx + uv.yyy + TIME * line_movement_speed) * line_sharpness * color.xyz * sin(TIME * pulse_speed);
		}
	}
 
	if (wave)
	{
		vec2 uv = VERTEX.xy * line_number;
		ALBEDO = sin(uv.xxx + TIME * line_movement_speed) * line_sharpness * color.xyz;
	}
 
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/border_width = 0.1
shader_param/color = Color( 0.878431, 0.333333, 0.721569, 1 )
shader_param/pattern = null
shader_param/line_number = null
shader_param/line_sharpness = null
shader_param/pulse = null
shader_param/pulse_speed = null
shader_param/line_movement = null
shader_param/line_movement_speed = null
shader_param/wave = null

[sub_resource type="SpatialMaterial" id=9]
next_pass = SubResource( 8 )
albedo_color = Color( 0.360784, 0.678431, 0.764706, 1 )

[sub_resource type="SphereMesh" id=6]
material = SubResource( 9 )

[sub_resource type="Curve" id=10]
_data = [ Vector2( 0, 1 ), 0.0, 0.0, 0, 0, Vector2( 0.475248, 0.518182 ), 0.0, 0.0, 0, 0, Vector2( 0.995049, 0.2 ), 0.0, 0.0, 0, 0 ]

[node name="player" type="KinematicBody"]
script = ExtResource( 1 )

[node name="CollisionShape" type="CollisionShape" parent="."]
shape = SubResource( 1 )

[node name="MeshInstance" type="MeshInstance" parent="."]
mesh = SubResource( 2 )
material/0 = SubResource( 5 )

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.988576, 0.150726, 0, -0.150726, 0.988576, 0, 0.803167, 4.34114 )
fov = 90.9
size = 0.1

[node name="OmniLight" type="OmniLight" parent="."]
omni_range = 25.0
omni_attenuation = 0.574349

[node name="Timer_respawn" type="Timer" parent="."]
one_shot = true

[node name="Tween" type="Tween" parent="."]

[node name="Timer_velocita" type="Timer" parent="."]
autostart = true

[node name="Node" type="Node" parent="."]

[node name="mesh_particelle" type="MeshInstance" parent="."]

[node name="CPUParticles" type="CPUParticles" parent="mesh_particelle"]
amount = 10
lifetime = 2.0
speed_scale = 6.87
randomness = 0.51
lifetime_randomness = 0.13
mesh = SubResource( 6 )
emission_shape = 1
emission_sphere_radius = 0.3
flag_disable_z = true
direction = Vector3( 0, 0, 0 )
spread = 5.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 3.0
initial_velocity_random = 0.3
orbit_velocity = 0.0
orbit_velocity_random = 0.0
orbit_velocity_curve = null
scale_amount = 0.15
scale_amount_curve = SubResource( 10 )

[connection signal="timeout" from="Timer_respawn" to="." method="_on_Timer_respawn_timeout"]
[connection signal="timeout" from="Timer_velocita" to="." method="_on_Timer_velocita_timeout"]
